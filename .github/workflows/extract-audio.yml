name: Extract YouTube Audio
on:
  repository_dispatch:
    types: [extract-audio]

jobs:
  extract:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install yt-dlp and dependencies
        run: |
          pip install yt-dlp
          pip install requests
          
      - name: Extract audio with better options
        env:
          VIDEO_URL: ${{ github.event.client_payload.video_url }}
          VIDEO_TITLE: ${{ github.event.client_payload.title }}
        run: |
          echo "Processing: $VIDEO_TITLE"
          echo "URL: $VIDEO_URL"
          
          # Try with different user agent and options
          yt-dlp \
            --user-agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" \
            --extractor-args "youtube:skip=hls,dash" \
            --format "bestaudio[ext=m4a]/bestaudio/best" \
            --extract-audio \
            --audio-format mp3 \
            --audio-quality 192K \
            --output "audio.%(ext)s" \
            --no-check-certificates \
            --ignore-errors \
            "$VIDEO_URL"
            
      - name: Check if audio file exists
        run: |
          if [ -f "audio.mp3" ]; then
            echo "Audio file created successfully"
            ls -la audio.mp3
          else
            echo "Audio file not found, checking for other formats..."
            ls -la *.mp3 2>/dev/null || echo "No MP3 files found"
            ls -la *.m4a 2>/dev/null || echo "No M4A files found"
            # Try to find any audio file and rename it
            AUDIO_FILE=$(find . -name "*.mp3" -o -name "*.m4a" -o -name "*.webm" | head -n 1)
            if [ -n "$AUDIO_FILE" ]; then
              echo "Found audio file: $AUDIO_FILE"
              cp "$AUDIO_FILE" audio.mp3
            else
              echo "No audio file found, download may have failed"
              exit 1
            fi
          fi
          
      - name: Upload to temporary storage
        id: upload
        run: |
          if [ ! -f "audio.mp3" ]; then
            echo "No audio file to upload"
            exit 1
          fi
          
          echo "Uploading audio file..."
          RESPONSE=$(curl -s -F "file=@audio.mp3" https://file.io)
          echo "Upload response: $RESPONSE"
          
          # Extract download URL from response
          DOWNLOAD_URL=$(echo $RESPONSE | python3 -c "
import json, sys
try:
    data = json.load(sys.stdin)
    if data.get('success'):
        print(data['link'])
    else:
        print('Upload failed:', data.get('message', 'Unknown error'))
        sys.exit(1)
except Exception as e:
    print('Error parsing response:', e)
    sys.exit(1)
")
          
          if [ $? -eq 0 ] && [ -n "$DOWNLOAD_URL" ]; then
            echo "download_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT
            echo "Audio uploaded successfully to: $DOWNLOAD_URL"
          else
            echo "Failed to upload audio file"
            exit 1
          fi
          
      - name: Trigger n8n webhook
        env:
          N8N_WEBHOOK: ${{ secrets.N8N_WEBHOOK_URL }}
          TITLE: ${{ github.event.client_payload.title }}
          DESCRIPTION: ${{ github.event.client_payload.description }}
          VIDEO_URL: ${{ github.event.client_payload.video_url }}
          AUDIO_URL: ${{ steps.upload.outputs.download_url }}
        run: |
          if [ -z "$AUDIO_URL" ]; then
            echo "No audio URL available, skipping webhook"
            exit 1
          fi
          
          echo "Triggering n8n webhook..."
          curl -X POST "$N8N_WEBHOOK" \
            -H "Content-Type: application/json" \
            -d "{
              \"title\": \"$TITLE\",
              \"description\": \"$DESCRIPTION\",
              \"video_url\": \"$VIDEO_URL\",
              \"audio_url\": \"$AUDIO_URL\"
            }" \
            -v
          
          echo "Webhook triggered successfully"
