name: Extract YouTube Audio

on:
  repository_dispatch:
    types: [extract-audio]

jobs:
  extract:
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up job
      run: echo "Starting YouTube audio extraction"
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install yt-dlp
      run: |
        pip install yt-dlp
    
    - name: Download and extract audio from YouTube
      run: |
        echo "Processing YouTube video: ${{ github.event.client_payload.VIDEO_TITLE }}"
        echo "YouTube URL: ${{ github.event.client_payload.VIDEO_URL }}"
        
        # Download audio using yt-dlp
        yt-dlp \
          --extract-audio \
          --audio-format mp3 \
          --audio-quality 0 \
          --output "%(title)s.%(ext)s" \
          --no-playlist \
          --embed-thumbnail \
          --add-metadata \
          "${{ github.event.client_payload.VIDEO_URL }}"
        
        # Find the downloaded file (yt-dlp creates files with video title)
        AUDIO_FILE=$(find . -name "*.mp3" -type f | head -1)
        echo "Downloaded file: $AUDIO_FILE"
        
        # Create a clean filename for the episode
        CLEAN_TITLE="${{ github.event.client_payload.VIDEO_TITLE }}"
        CLEAN_TITLE=$(echo "$CLEAN_TITLE" | sed 's/[^a-zA-Z0-9 ]//g' | sed 's/ /_/g')
        EPISODE_FILENAME="episode_$(date +%Y%m%d_%H%M%S)_${CLEAN_TITLE}.mp3"
        
        # Rename the file
        mv "$AUDIO_FILE" "$EPISODE_FILENAME"
        
        echo "Final filename: $EPISODE_FILENAME"
        echo "EPISODE_FILENAME=$EPISODE_FILENAME" >> $GITHUB_ENV
        
        # Show file info
        ls -la *.mp3
        file "$EPISODE_FILENAME"

    - name: Upload to Libsyn via FTP
      run: |
        echo "Uploading to Libsyn FTP..."
        
        # Install lftp for FTP operations
        sudo apt-get update
        sudo apt-get install -y lftp
        
        # Upload the file
        lftp -c "
        set ftp:ssl-allow no;
        open ftp://${{ secrets.LIBSYN_FTP_USERNAME }}:${{ secrets.LIBSYN_FTP_PASSWORD }}@${{ secrets.LIBSYN_FTP_SERVER }};
        cd /;
        put $EPISODE_FILENAME;
        ls -la;
        quit
        "
        
        echo "✅ Successfully uploaded to Libsyn: $EPISODE_FILENAME"
        
        # Show next steps
        echo ""
        echo "Next steps:"
        echo "1. Go to your Libsyn dashboard" 
        echo "2. Create a new episode"
        echo "3. Select the uploaded file: $EPISODE_FILENAME"
        echo "4. Add title: ${{ github.event.client_payload.VIDEO_TITLE }}"

    - name: Cleanup
      run: |
        echo "Cleaning up temporary files..."
        rm -f *.mp3
        echo "✅ Cleanup completed"
    
    - name: Post Setup Python
      run: |
        echo "Post job cleanup."
    
    - name: Complete job
      run: |
        echo "Cleaning up orphan processes"
